{"ast":null,"code":"var _jsxFileName = \"/Users/privetsvuemlord/Documents/react/trainingTime/src/components/App.jsx\";\nimport { Component } from \"react\";\nimport contacts from \"../json/contacts.json\";\nimport shortid from \"shortid\";\nimport { FormContacts } from \"./FormContacts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport class App extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      contacts,\n      name: \"\"\n    };\n\n    this.handleNameChange = event => {\n      this.setState({\n        name: event.currentTarget.value\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      this.addNewContact(this.state.name);\n      this.reset();\n    };\n\n    this.reset = () => {\n      this.setState({\n        contacts: [],\n        name: \"\"\n      });\n    };\n\n    this.addNewContact = name => {\n      const newContact = {\n        id: shortid.generate(),\n        name\n      };\n      this.setState(prevState => ({\n        contacts: [newContact, ...prevState.contacts]\n      }));\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(FormContacts, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Contacts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: contacts.map(contact => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: contact.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this)\n        }, contact.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}","map":{"version":3,"sources":["/Users/privetsvuemlord/Documents/react/trainingTime/src/components/App.jsx"],"names":["Component","contacts","shortid","FormContacts","App","state","name","handleNameChange","event","setState","currentTarget","value","handleSubmit","preventDefault","addNewContact","reset","newContact","id","generate","prevState","render","map","contact"],"mappings":";AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,OAAP,MAAoB,SAApB;AAEA,SAASC,YAAT,QAA6B,gBAA7B;;;AAEA,OAAO,MAAMC,GAAN,SAAkBJ,SAAlB,CAA4B;AAAA;AAAA;AAAA,SACjCK,KADiC,GACzB;AACNJ,MAAAA,QADM;AAENK,MAAAA,IAAI,EAAE;AAFA,KADyB;;AAAA,SAKjCC,gBALiC,GAKbC,KAAD,IAAW;AAC5B,WAAKC,QAAL,CAAc;AAAEH,QAAAA,IAAI,EAAEE,KAAK,CAACE,aAAN,CAAoBC;AAA5B,OAAd;AACD,KAPgC;;AAAA,SASjCC,YATiC,GASjBJ,KAAD,IAAW;AACxBA,MAAAA,KAAK,CAACK,cAAN;AACA,WAAKC,aAAL,CAAmB,KAAKT,KAAL,CAAWC,IAA9B;AACA,WAAKS,KAAL;AACD,KAbgC;;AAAA,SAejCA,KAfiC,GAezB,MAAM;AACZ,WAAKN,QAAL,CAAc;AAAER,QAAAA,QAAQ,EAAE,EAAZ;AAAgBK,QAAAA,IAAI,EAAE;AAAtB,OAAd;AACD,KAjBgC;;AAAA,SAmBjCQ,aAnBiC,GAmBhBR,IAAD,IAAU;AACxB,YAAMU,UAAU,GAAG;AACjBC,QAAAA,EAAE,EAAEf,OAAO,CAACgB,QAAR,EADa;AAEjBZ,QAAAA;AAFiB,OAAnB;AAKA,WAAKG,QAAL,CAAeU,SAAD,KAAgB;AAC5BlB,QAAAA,QAAQ,EAAE,CAACe,UAAD,EAAa,GAAGG,SAAS,CAAClB,QAA1B;AADkB,OAAhB,CAAd;AAGD,KA5BgC;AAAA;;AA8BjCmB,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BACE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA,kBACGnB,QAAQ,CAACoB,GAAT,CAAcC,OAAD,iBACZ;AAAA,iCACE;AAAA,sBAAIA,OAAO,CAAChB;AAAZ;AAAA;AAAA;AAAA;AAAA;AADF,WAASgB,OAAO,CAACL,EAAjB;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA,oBADF;AAaD;;AA5CgC","sourcesContent":["import { Component } from \"react\";\nimport contacts from \"../json/contacts.json\";\nimport shortid from \"shortid\";\n\nimport { FormContacts } from \"./FormContacts\";\n\nexport class App extends Component {\n  state = {\n    contacts,\n    name: \"\",\n  };\n  handleNameChange = (event) => {\n    this.setState({ name: event.currentTarget.value });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    this.addNewContact(this.state.name);\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ contacts: [], name: \"\" });\n  };\n\n  addNewContact = (name) => {\n    const newContact = {\n      id: shortid.generate(),\n      name,\n    };\n\n    this.setState((prevState) => ({\n      contacts: [newContact, ...prevState.contacts],\n    }));\n  };\n\n  render() {\n    return (\n      <>\n        <FormContacts />\n        <h2>Contacts</h2>\n        <ul>\n          {contacts.map((contact) => (\n            <li key={contact.id}>\n              <p>{contact.name}</p>\n            </li>\n          ))}\n        </ul>\n      </>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}