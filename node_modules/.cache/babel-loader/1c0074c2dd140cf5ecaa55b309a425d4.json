{"ast":null,"code":"var _jsxFileName = \"/Users/privetsvuemlord/Documents/react/trainingTime/src/components/Calendar/EventsBoard/EventBoard.jsx\";\nimport css from \"./EventBoard.module.css\";\nimport PropTypes from \"prop-types\";\nimport { EventCard } from \"../EventsCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const EventBoard = _ref => {\n  let {\n    events\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: css.eventBoard,\n    children: events.map(_ref2 => {\n      let {\n        name,\n        location,\n        speaker,\n        type,\n        time\n      } = _ref2;\n      return /*#__PURE__*/_jsxDEV(EventCard, {\n        name: name,\n        location: location,\n        speaker: speaker,\n        type: type,\n        start: time.start,\n        end: time.end\n      }, name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 9\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n};\n_c = EventBoard;\nEventBoard.propTypes = {\n  events: PropTypes.arrayOf(PropTypes.exact({\n    name: PropTypes.string.isRequired,\n    location: PropTypes.string.isRequired,\n    speaker: PropTypes.string.isRequired,\n    type: PropTypes.string.isRequired,\n    time: {\n      start: PropTypes.string.isRequired,\n      end: PropTypes.string.isRequired\n    }\n  }))\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"EventBoard\");","map":{"version":3,"sources":["/Users/privetsvuemlord/Documents/react/trainingTime/src/components/Calendar/EventsBoard/EventBoard.jsx"],"names":["css","PropTypes","EventCard","EventBoard","events","eventBoard","map","name","location","speaker","type","time","start","end","propTypes","arrayOf","exact","string","isRequired"],"mappings":";AAAA,OAAOA,GAAP,MAAgB,yBAAhB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,SAAT,QAA0B,eAA1B;;AACA,OAAO,MAAMC,UAAU,GAAG,QAAgB;AAAA,MAAf;AAAEC,IAAAA;AAAF,GAAe;AACxC,sBACE;AAAK,IAAA,SAAS,EAAEJ,GAAG,CAACK,UAApB;AAAA,cACGD,MAAM,CAACE,GAAP,CAAW;AAAA,UAAC;AAAEC,QAAAA,IAAF;AAAQC,QAAAA,QAAR;AAAkBC,QAAAA,OAAlB;AAA2BC,QAAAA,IAA3B;AAAiCC,QAAAA;AAAjC,OAAD;AAAA,0BACV,QAAC,SAAD;AAEE,QAAA,IAAI,EAAEJ,IAFR;AAGE,QAAA,QAAQ,EAAEC,QAHZ;AAIE,QAAA,OAAO,EAAEC,OAJX;AAKE,QAAA,IAAI,EAAEC,IALR;AAME,QAAA,KAAK,EAAEC,IAAI,CAACC,KANd;AAOE,QAAA,GAAG,EAAED,IAAI,CAACE;AAPZ,SACON,IADP;AAAA;AAAA;AAAA;AAAA,cADU;AAAA,KAAX;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CAhBM;KAAMJ,U;AAkBbA,UAAU,CAACW,SAAX,GAAuB;AACrBV,EAAAA,MAAM,EAAEH,SAAS,CAACc,OAAV,CACNd,SAAS,CAACe,KAAV,CAAgB;AACdT,IAAAA,IAAI,EAAEN,SAAS,CAACgB,MAAV,CAAiBC,UADT;AAEdV,IAAAA,QAAQ,EAAEP,SAAS,CAACgB,MAAV,CAAiBC,UAFb;AAGdT,IAAAA,OAAO,EAAER,SAAS,CAACgB,MAAV,CAAiBC,UAHZ;AAIdR,IAAAA,IAAI,EAAET,SAAS,CAACgB,MAAV,CAAiBC,UAJT;AAKdP,IAAAA,IAAI,EAAE;AACJC,MAAAA,KAAK,EAAEX,SAAS,CAACgB,MAAV,CAAiBC,UADpB;AAEJL,MAAAA,GAAG,EAAEZ,SAAS,CAACgB,MAAV,CAAiBC;AAFlB;AALQ,GAAhB,CADM;AADa,CAAvB","sourcesContent":["import css from \"./EventBoard.module.css\";\nimport PropTypes from \"prop-types\";\nimport { EventCard } from \"../EventsCard\";\nexport const EventBoard = ({ events }) => {\n  return (\n    <div className={css.eventBoard}>\n      {events.map(({ name, location, speaker, type, time }) => (\n        <EventCard\n          key={name}\n          name={name}\n          location={location}\n          speaker={speaker}\n          type={type}\n          start={time.start}\n          end={time.end}\n        />\n      ))}\n    </div>\n  );\n};\n\nEventBoard.propTypes = {\n  events: PropTypes.arrayOf(\n    PropTypes.exact({\n      name: PropTypes.string.isRequired,\n      location: PropTypes.string.isRequired,\n      speaker: PropTypes.string.isRequired,\n      type: PropTypes.string.isRequired,\n      time: {\n        start: PropTypes.string.isRequired,\n        end: PropTypes.string.isRequired,\n      },\n    })\n  ),\n};\n"]},"metadata":{},"sourceType":"module"}