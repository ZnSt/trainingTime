{"ast":null,"code":"var _jsxFileName = \"/Users/privetsvuemlord/Documents/react/trainingTime/src/components/FormContacts/FormContacts.jsx\";\nimport { Component } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class FormContacts extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      name: \"\",\n      number: \"\"\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      this.reset();\n      console.log(this.state);\n    };\n\n    this.reset = () => {\n      this.setState({\n        name: \"\",\n        number: \"\"\n      });\n    };\n\n    this.handleChange = event => {\n      const {\n        name,\n        value\n      } = event.currentTarget;\n      this.setState({\n        [name]: value\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: this.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Name\",\n        value: this.state.name,\n        onChange: this.handleChange,\n        name: \"name\",\n        pattern: \"^[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]+(([' -][a-zA-Z\\u0430-\\u044F\\u0410-\\u042F ])?[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]*)*$\",\n        title: \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"tel\",\n        placeholder: \"Number\",\n        value: this.state.number,\n        onChange: this.handleChange,\n        name: \"number\",\n        pattern: \"\\\\+?\\\\d{1,4}?[-.\\\\s]?\\\\(?\\\\d{1,3}?\\\\)?[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,9}\",\n        title: \"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.addNewContact(this.state.name, this.state.number),\n        type: \"submit\",\n        children: \"Add Contact\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/privetsvuemlord/Documents/react/trainingTime/src/components/FormContacts/FormContacts.jsx"],"names":["Component","FormContacts","state","name","number","handleSubmit","event","preventDefault","reset","console","log","setState","handleChange","value","currentTarget","render","addNewContact"],"mappings":";AAAA,SAASA,SAAT,QAA0B,OAA1B;;AAEA,OAAO,MAAMC,YAAN,SAA2BD,SAA3B,CAAqC;AAAA;AAAA;AAAA,SAC1CE,KAD0C,GAClC;AACNC,MAAAA,IAAI,EAAE,EADA;AAENC,MAAAA,MAAM,EAAE;AAFF,KADkC;;AAAA,SAM1CC,YAN0C,GAM1BC,KAAD,IAAW;AACxBA,MAAAA,KAAK,CAACC,cAAN;AACA,WAAKC,KAAL;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKR,KAAjB;AACD,KAVyC;;AAAA,SAY1CM,KAZ0C,GAYlC,MAAM;AACZ,WAAKG,QAAL,CAAc;AAAER,QAAAA,IAAI,EAAE,EAAR;AAAYC,QAAAA,MAAM,EAAE;AAApB,OAAd;AACD,KAdyC;;AAAA,SAgB1CQ,YAhB0C,GAgB1BN,KAAD,IAAW;AACxB,YAAM;AAAEH,QAAAA,IAAF;AAAQU,QAAAA;AAAR,UAAkBP,KAAK,CAACQ,aAA9B;AACA,WAAKH,QAAL,CAAc;AACZ,SAACR,IAAD,GAAQU;AADI,OAAd;AAGD,KArByC;AAAA;;AAsB1CE,EAAAA,MAAM,GAAG;AACP,wBACE;AAAM,MAAA,QAAQ,EAAE,KAAKV,YAArB;AAAA,8BACE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,WAAW,EAAC,MAFd;AAGE,QAAA,KAAK,EAAE,KAAKH,KAAL,CAAWC,IAHpB;AAIE,QAAA,QAAQ,EAAE,KAAKS,YAJjB;AAKE,QAAA,IAAI,EAAC,MALP;AAME,QAAA,OAAO,EAAC,wHANV;AAOE,QAAA,KAAK,EAAC,wIAPR;AAQE,QAAA,QAAQ;AARV;AAAA;AAAA;AAAA;AAAA,cADF,eAYE;AACE,QAAA,IAAI,EAAC,KADP;AAEE,QAAA,WAAW,EAAC,QAFd;AAGE,QAAA,KAAK,EAAE,KAAKV,KAAL,CAAWE,MAHpB;AAIE,QAAA,QAAQ,EAAE,KAAKQ,YAJjB;AAKE,QAAA,IAAI,EAAC,QALP;AAME,QAAA,OAAO,EAAC,wFANV;AAOE,QAAA,KAAK,EAAC,8FAPR;AAQE,QAAA,QAAQ;AARV;AAAA;AAAA;AAAA;AAAA,cAZF,eAuBE;AACE,QAAA,OAAO,EAAE,MAAM,KAAKI,aAAL,CAAmB,KAAKd,KAAL,CAAWC,IAA9B,EAAoC,KAAKD,KAAL,CAAWE,MAA/C,CADjB;AAEE,QAAA,IAAI,EAAC,QAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAvBF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAgCD;;AAvDyC","sourcesContent":["import { Component } from \"react\";\n\nexport class FormContacts extends Component {\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    this.reset();\n    console.log(this.state);\n  };\n\n  reset = () => {\n    this.setState({ name: \"\", number: \"\" });\n  };\n\n  handleChange = (event) => {\n    const { name, value } = event.currentTarget;\n    this.setState({\n      [name]: value,\n    });\n  };\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <input\n          type=\"text\"\n          placeholder=\"Name\"\n          value={this.state.name}\n          onChange={this.handleChange}\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n\n        <input\n          type=\"tel\"\n          placeholder=\"Number\"\n          value={this.state.number}\n          onChange={this.handleChange}\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n\n        <button\n          onClick={() => this.addNewContact(this.state.name, this.state.number)}\n          type=\"submit\"\n        >\n          Add Contact\n        </button>\n      </form>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}