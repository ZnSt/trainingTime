{"ast":null,"code":"var _jsxFileName = \"/Users/privetsvuemlord/Documents/react/trainingTime/src/components/ToDo/TodoList/TodoList.jsx\";\nimport { Component } from \"react\";\nimport todos from \"../../../json/todos.json\";\nimport { List } from \"../List\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class TodoList extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      todos\n    };\n\n    this.deleteTodo = id => {\n      this.setState(prevState => ({\n        todos: prevState.todos.filter(todo => todo !== id)\n      }));\n    };\n  }\n\n  render() {\n    const {\n      todos\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(List, {\n      todos: todos,\n      title: \"\\u0421\\u043E\\u0441\\u0442\\u043E\\u044F\\u043D\\u0438\\u0435 \\u041A\\u043E\\u043C\\u043F\\u043E\\u043D\\u0435\\u043D\\u0442\\u0430: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 12\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/privetsvuemlord/Documents/react/trainingTime/src/components/ToDo/TodoList/TodoList.jsx"],"names":["Component","todos","List","TodoList","state","deleteTodo","id","setState","prevState","filter","todo","render"],"mappings":";AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,SAASC,IAAT,QAAqB,SAArB;;AAEA,OAAO,MAAMC,QAAN,SAAuBH,SAAvB,CAAiC;AAAA;AAAA;AAAA,SACtCI,KADsC,GAC9B;AACNH,MAAAA;AADM,KAD8B;;AAAA,SAKtCI,UALsC,GAKxBC,EAAD,IAAQ;AACnB,WAAKC,QAAL,CAAeC,SAAD,KAAgB;AAC5BP,QAAAA,KAAK,EAAEO,SAAS,CAACP,KAAV,CAAgBQ,MAAhB,CAAwBC,IAAD,IAAUA,IAAI,KAAKJ,EAA1C;AADqB,OAAhB,CAAd;AAGD,KATqC;AAAA;;AAUtCK,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEV,MAAAA;AAAF,QAAY,KAAKG,KAAvB;AAEA,wBAAO,QAAC,IAAD;AAAM,MAAA,KAAK,EAAEH,KAAb;AAAoB,MAAA,KAAK,EAAC;AAA1B;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAdqC","sourcesContent":["import { Component } from \"react\";\nimport todos from \"../../../json/todos.json\";\nimport { List } from \"../List\";\n\nexport class TodoList extends Component {\n  state = {\n    todos,\n  };\n\n  deleteTodo = (id) => {\n    this.setState((prevState) => ({\n      todos: prevState.todos.filter((todo) => todo !== id),\n    }));\n  };\n  render() {\n    const { todos } = this.state;\n\n    return <List todos={todos} title=\"Состояние Компонента: \" />;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}