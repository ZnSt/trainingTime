{"ast":null,"code":"var _jsxFileName = \"/Users/privetsvuemlord/Documents/react/trainingTime/src/components/App.jsx\";\nimport { Component } from \"react\";\nimport contacts from \"../json/contacts.json\";\nimport shortid from \"shortid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport class App extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      contacts,\n      name: \"\"\n    };\n\n    this.handleNameChange = event => {\n      this.setState({\n        name: event.currentTarget.value\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      this.addNewContact(this.state.name);\n      this.reset();\n    };\n\n    this.reset = () => {\n      this.setState({\n        contacts: [],\n        name: \"\"\n      });\n    };\n\n    this.addNewContact = name => {\n      const newContact = {\n        id: shortid.generate(),\n        name\n      };\n      this.setState(prevState => ({\n        contacts: [newContact, ...prevState.contacts]\n      }));\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Name\",\n          name: \"name\",\n          onChange: this.handleNameChange,\n          value: this.state.name,\n          pattern: \"^[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]+(([' -][a-zA-Z\\u0430-\\u044F\\u0410-\\u042F ])?[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]*)*$\",\n          title: \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.addNewContact,\n          children: \"Add Contact\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Contacts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: contacts.map(contact => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: contact.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this)\n        }, contact.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}","map":{"version":3,"sources":["/Users/privetsvuemlord/Documents/react/trainingTime/src/components/App.jsx"],"names":["Component","contacts","shortid","App","state","name","handleNameChange","event","setState","currentTarget","value","handleSubmit","preventDefault","addNewContact","reset","newContact","id","generate","prevState","render","map","contact"],"mappings":";AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,OAAP,MAAoB,SAApB;;;AAEA,OAAO,MAAMC,GAAN,SAAkBH,SAAlB,CAA4B;AAAA;AAAA;AAAA,SACjCI,KADiC,GACzB;AACNH,MAAAA,QADM;AAENI,MAAAA,IAAI,EAAE;AAFA,KADyB;;AAAA,SAKjCC,gBALiC,GAKbC,KAAD,IAAW;AAC5B,WAAKC,QAAL,CAAc;AAAEH,QAAAA,IAAI,EAAEE,KAAK,CAACE,aAAN,CAAoBC;AAA5B,OAAd;AACD,KAPgC;;AAAA,SASjCC,YATiC,GASjBJ,KAAD,IAAW;AACxBA,MAAAA,KAAK,CAACK,cAAN;AACA,WAAKC,aAAL,CAAmB,KAAKT,KAAL,CAAWC,IAA9B;AACA,WAAKS,KAAL;AACD,KAbgC;;AAAA,SAejCA,KAfiC,GAezB,MAAM;AACZ,WAAKN,QAAL,CAAc;AAAEP,QAAAA,QAAQ,EAAE,EAAZ;AAAgBI,QAAAA,IAAI,EAAE;AAAtB,OAAd;AACD,KAjBgC;;AAAA,SAmBjCQ,aAnBiC,GAmBhBR,IAAD,IAAU;AACxB,YAAMU,UAAU,GAAG;AACjBC,QAAAA,EAAE,EAAEd,OAAO,CAACe,QAAR,EADa;AAEjBZ,QAAAA;AAFiB,OAAnB;AAKA,WAAKG,QAAL,CAAeU,SAAD,KAAgB;AAC5BjB,QAAAA,QAAQ,EAAE,CAACc,UAAD,EAAa,GAAGG,SAAS,CAACjB,QAA1B;AADkB,OAAhB,CAAd;AAGD,KA5BgC;AAAA;;AA8BjCkB,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BACE;AAAM,QAAA,QAAQ,EAAE,KAAKR,YAArB;AAAA,gCACE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,WAAW,EAAC,MAFd;AAGE,UAAA,IAAI,EAAC,MAHP;AAIE,UAAA,QAAQ,EAAE,KAAKL,gBAJjB;AAKE,UAAA,KAAK,EAAE,KAAKF,KAAL,CAAWC,IALpB;AAME,UAAA,OAAO,EAAC,wHANV;AAOE,UAAA,KAAK,EAAC,wIAPR;AAQE,UAAA,QAAQ;AARV;AAAA;AAAA;AAAA;AAAA,gBADF,eAWE;AAAQ,UAAA,OAAO,EAAE,KAAKQ,aAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAXF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAeE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAfF,eAgBE;AAAA,kBACGZ,QAAQ,CAACmB,GAAT,CAAcC,OAAD,iBACZ;AAAA,iCACE;AAAA,sBAAIA,OAAO,CAAChB;AAAZ;AAAA;AAAA;AAAA;AAAA;AADF,WAASgB,OAAO,CAACL,EAAjB;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cAhBF;AAAA,oBADF;AA0BD;;AAzDgC","sourcesContent":["import { Component } from \"react\";\nimport contacts from \"../json/contacts.json\";\nimport shortid from \"shortid\";\n\nexport class App extends Component {\n  state = {\n    contacts,\n    name: \"\",\n  };\n  handleNameChange = (event) => {\n    this.setState({ name: event.currentTarget.value });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    this.addNewContact(this.state.name);\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ contacts: [], name: \"\" });\n  };\n\n  addNewContact = (name) => {\n    const newContact = {\n      id: shortid.generate(),\n      name,\n    };\n\n    this.setState((prevState) => ({\n      contacts: [newContact, ...prevState.contacts],\n    }));\n  };\n\n  render() {\n    return (\n      <>\n        <form onSubmit={this.handleSubmit}>\n          <input\n            type=\"text\"\n            placeholder=\"Name\"\n            name=\"name\"\n            onChange={this.handleNameChange}\n            value={this.state.name}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n          <button onClick={this.addNewContact}>Add Contact</button>\n        </form>\n\n        <h2>Contacts</h2>\n        <ul>\n          {contacts.map((contact) => (\n            <li key={contact.id}>\n              <p>{contact.name}</p>\n            </li>\n          ))}\n        </ul>\n      </>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}