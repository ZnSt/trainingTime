{"ast":null,"code":"var _jsxFileName = \"/Users/privetsvuemlord/Documents/react/trainingTime/src/components/Counter/Counter.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Counter = () => {\n  _s();\n\n  const [count, setCount] = useState(0);\n  const isFirstRender = useRef(true);\n  useEffect(() => {\n    console.log(isFirstRender);\n    console.log(`Выполняется useEffect - ${Date.now()}`);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setCount(c => c + 1),\n      children: count\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Counter, \"ZzroPpzbjPd8ENRrQghZb45Hl50=\");\n\n_c = Counter;\n\nvar _c;\n\n$RefreshReg$(_c, \"Counter\");","map":{"version":3,"sources":["/Users/privetsvuemlord/Documents/react/trainingTime/src/components/Counter/Counter.jsx"],"names":["useState","useEffect","useRef","Counter","count","setCount","isFirstRender","console","log","Date","now","c"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,MAA9B,QAA4C,OAA5C;;AACA,OAAO,MAAMC,OAAO,GAAG,MAAM;AAAA;;AAC3B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAMM,aAAa,GAAGJ,MAAM,CAAC,IAAD,CAA5B;AACAD,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,OAAO,CAACC,GAAR,CAAYF,aAAZ;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAa,2BAA0BC,IAAI,CAACC,GAAL,EAAW,EAAlD;AACD,GAHQ,EAGN,EAHM,CAAT;AAKA,sBACE;AAAA,4BACE;AAAQ,MAAA,OAAO,EAAE,MAAML,QAAQ,CAAEM,CAAD,IAAOA,CAAC,GAAG,CAAZ,CAA/B;AAAA,gBAAgDP;AAAhD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CAdM;;GAAMD,O;;KAAAA,O","sourcesContent":["import { useState, useEffect, useRef } from \"react\";\nexport const Counter = () => {\n  const [count, setCount] = useState(0);\n  const isFirstRender = useRef(true);\n  useEffect(() => {\n    console.log(isFirstRender);\n    console.log(`Выполняется useEffect - ${Date.now()}`);\n  }, []);\n\n  return (\n    <div>\n      <button onClick={() => setCount((c) => c + 1)}>{count}</button>\n      <p></p>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}