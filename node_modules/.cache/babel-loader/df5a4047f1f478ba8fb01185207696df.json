{"ast":null,"code":"var _jsxFileName = \"/Users/privetsvuemlord/Documents/react/trainingTime/src/components/ToDo/TodoList/TodoList.jsx\";\nimport { Component } from \"react\";\nimport shortid from \"shortid\";\nimport { List } from \"../List\";\nimport { TodoEditor } from \"../TodoEditor\";\nimport { Filter } from \"../Filter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport class TodoList extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      todos: [],\n      filter: \"\"\n    };\n\n    this.addTodo = text => {\n      const todo = {\n        id: shortid.generate(),\n        text,\n        completed: false\n      };\n      this.setState(prevState => ({\n        todos: [todo, ...prevState.todos]\n      }));\n    };\n\n    this.deleteTodo = id => {\n      this.setState(prevState => ({\n        todos: prevState.todos.filter(todo => todo.id !== id)\n      }));\n    };\n\n    this.toggleCompleted = todoId => {\n      this.setState(prevState => ({\n        todos: prevState.todos.map(todo => {\n          if (todo.id === todoId) {\n            return { ...todo,\n              completed: !todo.completed\n            };\n          }\n\n          return todo;\n        })\n      }));\n    };\n\n    this.changeFilter = event => {\n      this.setState({\n        filter: event.currentTarget.value\n      });\n    };\n\n    this.getVisibleTodos = () => {\n      const normalizedFilter = this.state.filter.toLowerCase();\n      return this.state.todos.filter(todo => todo.text.includes(normalizedFilter));\n    };\n  }\n\n  componentDidMount() {\n    const todos = localStorage.getItem(\"todos\");\n    const parse = JSON.parse(todos);\n    this.setState({\n      todos: parse\n    });\n  }\n\n  componentDidUpdate(_, prevState) {\n    const {\n      todos\n    } = this.state;\n\n    if (todos !== prevState.todos) {\n      console.log(\"update todos\");\n      localStorage.setItem(\"todos\", JSON.stringify(todos));\n    }\n  }\n\n  render() {\n    const {\n      todos\n    } = this.state;\n    const completed = todos.filter(todo => todo.completed);\n    const filterTodos = this.getVisibleTodos();\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\u041E\\u0431\\u0449\\u0435\\u0435 \\u043A\\u043E\\u043B\\u0438\\u0447\\u0435\\u0441\\u0442\\u0432\\u043E Todo: \", todos.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\u041A\\u043E\\u043B\\u0438\\u0447\\u0435\\u0441\\u0442\\u0432\\u043E \\u0432\\u044B\\u043F\\u043E\\u043B\\u043D\\u0435\\u043D\\u044B\\u0445: \", completed.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Filter, {\n        onFilter: this.state.filter,\n        changeFilter: this.changeFilter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        todos: filterTodos,\n        title: \"\\u0421\\u043E\\u0441\\u0442\\u043E\\u044F\\u043D\\u0438\\u0435 \\u041A\\u043E\\u043C\\u043F\\u043E\\u043D\\u0435\\u043D\\u0442\\u0430: \",\n        onDelete: this.deleteTodo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TodoEditor, {\n        onSubmit: this.addTodo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}","map":{"version":3,"sources":["/Users/privetsvuemlord/Documents/react/trainingTime/src/components/ToDo/TodoList/TodoList.jsx"],"names":["Component","shortid","List","TodoEditor","Filter","TodoList","state","todos","filter","addTodo","text","todo","id","generate","completed","setState","prevState","deleteTodo","toggleCompleted","todoId","map","changeFilter","event","currentTarget","value","getVisibleTodos","normalizedFilter","toLowerCase","includes","componentDidMount","localStorage","getItem","parse","JSON","componentDidUpdate","_","console","log","setItem","stringify","render","filterTodos","length"],"mappings":"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","sourcesContent":["import { Component } from \"react\";\nimport shortid from \"shortid\";\nimport { List } from \"../List\";\nimport { TodoEditor } from \"../TodoEditor\";\nimport { Filter } from \"../Filter\";\n\nexport class TodoList extends Component {\n  state = {\n    todos: [],\n    filter: \"\",\n  };\n\n  addTodo = (text) => {\n    const todo = {\n      id: shortid.generate(),\n      text,\n      completed: false,\n    };\n\n    this.setState((prevState) => ({\n      todos: [todo, ...prevState.todos],\n    }));\n  };\n  deleteTodo = (id) => {\n    this.setState((prevState) => ({\n      todos: prevState.todos.filter((todo) => todo.id !== id),\n    }));\n  };\n\n  toggleCompleted = (todoId) => {\n    this.setState((prevState) => ({\n      todos: prevState.todos.map((todo) => {\n        if (todo.id === todoId) {\n          return {\n            ...todo,\n            completed: !todo.completed,\n          };\n        }\n\n        return todo;\n      }),\n    }));\n  };\n\n  changeFilter = (event) => {\n    this.setState({ filter: event.currentTarget.value });\n  };\n\n  getVisibleTodos = () => {\n    const normalizedFilter = this.state.filter.toLowerCase();\n    return this.state.todos.filter((todo) => todo.text.includes(normalizedFilter));\n  };\n\n  componentDidMount() {\n    const todos = localStorage.getItem(\"todos\");\n    const parse = JSON.parse(todos);\n    this.setState({ todos: parse });\n  }\n\n  componentDidUpdate(_, prevState) {\n    const { todos } = this.state;\n    if (todos !== prevState.todos) {\n      console.log(\"update todos\");\n      localStorage.setItem(\"todos\", JSON.stringify(todos));\n    }\n  }\n\n  render() {\n    const { todos } = this.state;\n    const completed = todos.filter((todo) => todo.completed);\n    const filterTodos = this.getVisibleTodos();\n    return (\n      <>\n        <div>\n          <p>Общее количество Todo: {todos.length}</p>\n          <p>Количество выполненых: {completed.length}</p>\n        </div>\n        <Filter onFilter={this.state.filter} changeFilter={this.changeFilter} />\n\n        <List todos={filterTodos} title=\"Состояние Компонента: \" onDelete={this.deleteTodo} />\n        <TodoEditor onSubmit={this.addTodo} />\n      </>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}