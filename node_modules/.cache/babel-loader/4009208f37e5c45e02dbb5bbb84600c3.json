{"ast":null,"code":"var _jsxFileName = \"/Users/privetsvuemlord/Documents/react/trainingTime/src/components/ToDo/TodoEditor/TodoEditor.jsx\";\nimport { Component } from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport { ReactComponent as AddIcon } from \"../../../svg/add-outline.svg\";\nimport FloatingLabel from \"react-bootstrap/FloatingLabel\";\nimport Form from \"react-bootstrap/Form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class TodoEditor extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      message: \"\"\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        message: event.currentTarget.value\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      this.props.onSubmit(this.state.message);\n      this.reset();\n    };\n\n    this.reset = () => {\n      this.setState({\n        message: \"\"\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: this.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: this.state.message,\n        onChange: this.handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"success\",\n        type: \"submit\",\n        style: {\n          background: \"black\"\n        },\n        children: /*#__PURE__*/_jsxDEV(AddIcon, {\n          fill: \"red\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/privetsvuemlord/Documents/react/trainingTime/src/components/ToDo/TodoEditor/TodoEditor.jsx"],"names":["Component","Button","ReactComponent","AddIcon","FloatingLabel","Form","TodoEditor","state","message","handleChange","event","setState","currentTarget","value","handleSubmit","preventDefault","props","onSubmit","reset","render","background"],"mappings":";AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,SAASC,cAAc,IAAIC,OAA3B,QAA0C,8BAA1C;AACA,OAAOC,aAAP,MAA0B,+BAA1B;AACA,OAAOC,IAAP,MAAiB,sBAAjB;;AAEA,OAAO,MAAMC,UAAN,SAAyBN,SAAzB,CAAmC;AAAA;AAAA;AAAA,SACxCO,KADwC,GAChC;AACNC,MAAAA,OAAO,EAAE;AADH,KADgC;;AAAA,SAKxCC,YALwC,GAKxBC,KAAD,IAAW;AACxB,WAAKC,QAAL,CAAc;AAAEH,QAAAA,OAAO,EAAEE,KAAK,CAACE,aAAN,CAAoBC;AAA/B,OAAd;AACD,KAPuC;;AAAA,SASxCC,YATwC,GASxBJ,KAAD,IAAW;AACxBA,MAAAA,KAAK,CAACK,cAAN;AACA,WAAKC,KAAL,CAAWC,QAAX,CAAoB,KAAKV,KAAL,CAAWC,OAA/B;AACA,WAAKU,KAAL;AACD,KAbuC;;AAAA,SAexCA,KAfwC,GAehC,MAAM;AACZ,WAAKP,QAAL,CAAc;AAAEH,QAAAA,OAAO,EAAE;AAAX,OAAd;AACD,KAjBuC;AAAA;;AAmBxCW,EAAAA,MAAM,GAAG;AACP,wBACE;AAAM,MAAA,QAAQ,EAAE,KAAKL,YAArB;AAAA,8BACE;AAAU,QAAA,KAAK,EAAE,KAAKP,KAAL,CAAWC,OAA5B;AAAqC,QAAA,QAAQ,EAAE,KAAKC;AAApD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,SAAhB;AAA0B,QAAA,IAAI,EAAC,QAA/B;AAAwC,QAAA,KAAK,EAAE;AAAEW,UAAAA,UAAU,EAAE;AAAd,SAA/C;AAAA,+BACE,QAAC,OAAD;AAAS,UAAA,IAAI,EAAC;AAAd;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AASD;;AA7BuC","sourcesContent":["import { Component } from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport { ReactComponent as AddIcon } from \"../../../svg/add-outline.svg\";\nimport FloatingLabel from \"react-bootstrap/FloatingLabel\";\nimport Form from \"react-bootstrap/Form\";\n\nexport class TodoEditor extends Component {\n  state = {\n    message: \"\",\n  };\n\n  handleChange = (event) => {\n    this.setState({ message: event.currentTarget.value });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    this.props.onSubmit(this.state.message);\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ message: \"\" });\n  };\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <textarea value={this.state.message} onChange={this.handleChange}></textarea>\n        <br />\n        <Button variant=\"success\" type=\"submit\" style={{ background: \"black\" }}>\n          <AddIcon fill=\"red\" />\n        </Button>\n      </form>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}