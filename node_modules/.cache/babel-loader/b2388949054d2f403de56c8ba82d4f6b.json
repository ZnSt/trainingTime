{"ast":null,"code":"var _jsxFileName = \"/Users/privetsvuemlord/Documents/react/trainingTime/src/components/News/News.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport fetchArticles from '../../services/api';\nimport { Form } from 'components/Form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const News = () => {\n  _s();\n\n  const [articles, setArticles] = useState([]);\n  const [query, setQuery] = useState('');\n  const [currentPage, setCurrentPage] = useState(1);\n  useEffect(() => {\n    fetchArticles({\n      searchQuery: query,\n      currentPage\n    }).then(responseArticles => {\n      setArticles(prevArticles => [...prevArticles, ...responseArticles]);\n    });\n  }, [currentPage, query]);\n\n  const onChangeQuery = query => {\n    setQuery(query);\n    setCurrentPage(1);\n    setArticles([]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: onChangeQuery\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: articles.map(_ref => {\n        let {\n          title,\n          url\n        } = _ref;\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: url,\n            children: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 13\n          }, this)\n        }, title, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(News, \"lgxdZLujGefWFmlDU0bSatLU6YU=\");\n\n_c = News;\n\nvar _c;\n\n$RefreshReg$(_c, \"News\");","map":{"version":3,"sources":["/Users/privetsvuemlord/Documents/react/trainingTime/src/components/News/News.jsx"],"names":["useState","useEffect","fetchArticles","Form","News","articles","setArticles","query","setQuery","currentPage","setCurrentPage","searchQuery","then","responseArticles","prevArticles","onChangeQuery","map","title","url"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,aAAP,MAA0B,oBAA1B;AACA,SAASC,IAAT,QAAqB,iBAArB;;;AAEA,OAAO,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACxB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACS,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,CAAC,CAAD,CAA9C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdC,IAAAA,aAAa,CAAC;AAAES,MAAAA,WAAW,EAAEJ,KAAf;AAAsBE,MAAAA;AAAtB,KAAD,CAAb,CAAmDG,IAAnD,CAAyDC,gBAAD,IAAsB;AAC5EP,MAAAA,WAAW,CAAEQ,YAAD,IAAkB,CAAC,GAAGA,YAAJ,EAAkB,GAAGD,gBAArB,CAAnB,CAAX;AACD,KAFD;AAGD,GAJQ,EAIN,CAACJ,WAAD,EAAcF,KAAd,CAJM,CAAT;;AAMA,QAAMQ,aAAa,GAAIR,KAAD,IAAW;AAC/BC,IAAAA,QAAQ,CAACD,KAAD,CAAR;AACAG,IAAAA,cAAc,CAAC,CAAD,CAAd;AACAJ,IAAAA,WAAW,CAAC,EAAD,CAAX;AACD,GAJD;;AAMA,sBACE;AAAA,4BACE,QAAC,IAAD;AAAM,MAAA,QAAQ,EAAES;AAAhB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gBACGV,QAAQ,CAACW,GAAT,CAAa;AAAA,YAAC;AAAEC,UAAAA,KAAF;AAASC,UAAAA;AAAT,SAAD;AAAA,4BACZ;AAAA,iCACE;AAAG,YAAA,IAAI,EAAEA,GAAT;AAAA,sBAAeD;AAAf;AAAA;AAAA;AAAA;AAAA;AADF,WAASA,KAAT;AAAA;AAAA;AAAA;AAAA,gBADY;AAAA,OAAb;AADH;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAYD,CA7BM;;GAAMb,I;;KAAAA,I","sourcesContent":["import { useState, useEffect } from 'react';\nimport fetchArticles from '../../services/api';\nimport { Form } from 'components/Form';\n\nexport const News = () => {\n  const [articles, setArticles] = useState([]);\n  const [query, setQuery] = useState('');\n  const [currentPage, setCurrentPage] = useState(1);\n\n  useEffect(() => {\n    fetchArticles({ searchQuery: query, currentPage }).then((responseArticles) => {\n      setArticles((prevArticles) => [...prevArticles, ...responseArticles]);\n    });\n  }, [currentPage, query]);\n\n  const onChangeQuery = (query) => {\n    setQuery(query);\n    setCurrentPage(1);\n    setArticles([]);\n  };\n\n  return (\n    <>\n      <Form onSubmit={onChangeQuery} />\n      <ul>\n        {articles.map(({ title, url }) => (\n          <li key={title}>\n            <a href={url}>{title}</a>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}