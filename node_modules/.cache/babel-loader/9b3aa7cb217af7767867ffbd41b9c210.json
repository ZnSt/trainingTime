{"ast":null,"code":"var _jsxFileName = \"/Users/privetsvuemlord/Documents/react/trainingTime/src/components/ToDo/TodoList/TodoList.jsx\";\nimport { Component } from \"react\";\nimport shortid from \"shortid\";\nimport { List } from \"../List\";\nimport { TodoEditor } from \"../TodoEditor\";\nimport { Filter } from \"../Filter\";\nimport { MyVerticallyCenteredModal } from \"../MyVerticallyCenteredModal\";\nimport { Modal } from \"../Modal/Modal\";\nimport { BtnForModal } from \"../BtnForModal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport class TodoList extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      todos: [],\n      filter: \"\",\n      modalShow: false\n    };\n\n    this.addTodo = text => {\n      const todo = {\n        id: shortid.generate(),\n        text,\n        completed: false\n      };\n      this.setState(prevState => ({\n        todos: [todo, ...prevState.todos]\n      }));\n    };\n\n    this.deleteTodo = id => {\n      this.setState(prevState => ({\n        todos: prevState.todos.filter(todo => todo.id !== id)\n      }));\n    };\n\n    this.toggleCompleted = todoId => {\n      this.setState(prevState => ({\n        todos: prevState.todos.map(todo => {\n          if (todo.id === todoId) {\n            return { ...todo,\n              completed: !todo.completed\n            };\n          }\n\n          return todo;\n        })\n      }));\n    };\n\n    this.changeFilter = event => {\n      this.setState({\n        filter: event.currentTarget.value\n      });\n    };\n\n    this.getVisibleTodos = () => {\n      const normalizedFilter = this.state.filter.toLowerCase();\n      return this.state.todos.filter(todo => todo.text.includes(normalizedFilter));\n    };\n\n    this.toggleModal = () => {\n      this.setState({\n        modalShow: !this.state.modalShow\n      });\n    };\n  }\n\n  componentDidMount() {\n    const todos = localStorage.getItem(\"todos\");\n    const parse = JSON.parse(todos);\n\n    if (parse) {\n      this.setState({\n        todos: parse\n      });\n    }\n  }\n\n  componentDidUpdate(_, prevState) {\n    const {\n      todos\n    } = this.state;\n\n    if (todos !== prevState.todos) {\n      localStorage.setItem(\"todos\", JSON.stringify(this.state.todos));\n    }\n  } // НЕ ТРОГАТЬ!!!\n  // setModalShow = (value) => {\n  //   this.setState({ modalShow: value });\n  // };\n\n\n  render() {\n    const {\n      todos,\n      modalShow\n    } = this.state;\n    const completed = todos.filter(todo => todo.completed);\n    const filterTodos = this.getVisibleTodos();\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(BtnForModal, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), modalShow && /*#__PURE__*/_jsxDEV(Modal, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 23\n      }, this)]\n    }, void 0, true);\n  }\n\n}","map":{"version":3,"sources":["/Users/privetsvuemlord/Documents/react/trainingTime/src/components/ToDo/TodoList/TodoList.jsx"],"names":["Component","shortid","List","TodoEditor","Filter","MyVerticallyCenteredModal","Modal","BtnForModal","TodoList","state","todos","filter","modalShow","addTodo","text","todo","id","generate","completed","setState","prevState","deleteTodo","toggleCompleted","todoId","map","changeFilter","event","currentTarget","value","getVisibleTodos","normalizedFilter","toLowerCase","includes","toggleModal","componentDidMount","localStorage","getItem","parse","JSON","componentDidUpdate","_","setItem","stringify","render","filterTodos"],"mappings":";AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,OAAP,MAAoB,SAApB;AACA,SAASC,IAAT,QAAqB,SAArB;AACA,SAASC,UAAT,QAA2B,eAA3B;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,SAASC,yBAAT,QAA0C,8BAA1C;AAEA,SAASC,KAAT,QAAsB,gBAAtB;AACA,SAASC,WAAT,QAA4B,gBAA5B;;;AACA,OAAO,MAAMC,QAAN,SAAuBR,SAAvB,CAAiC;AAAA;AAAA;AAAA,SACtCS,KADsC,GAC9B;AACNC,MAAAA,KAAK,EAAE,EADD;AAENC,MAAAA,MAAM,EAAE,EAFF;AAGNC,MAAAA,SAAS,EAAE;AAHL,KAD8B;;AAAA,SAOtCC,OAPsC,GAO3BC,IAAD,IAAU;AAClB,YAAMC,IAAI,GAAG;AACXC,QAAAA,EAAE,EAAEf,OAAO,CAACgB,QAAR,EADO;AAEXH,QAAAA,IAFW;AAGXI,QAAAA,SAAS,EAAE;AAHA,OAAb;AAMA,WAAKC,QAAL,CAAeC,SAAD,KAAgB;AAC5BV,QAAAA,KAAK,EAAE,CAACK,IAAD,EAAO,GAAGK,SAAS,CAACV,KAApB;AADqB,OAAhB,CAAd;AAGD,KAjBqC;;AAAA,SAkBtCW,UAlBsC,GAkBxBL,EAAD,IAAQ;AACnB,WAAKG,QAAL,CAAeC,SAAD,KAAgB;AAC5BV,QAAAA,KAAK,EAAEU,SAAS,CAACV,KAAV,CAAgBC,MAAhB,CAAwBI,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYA,EAA7C;AADqB,OAAhB,CAAd;AAGD,KAtBqC;;AAAA,SAwBtCM,eAxBsC,GAwBnBC,MAAD,IAAY;AAC5B,WAAKJ,QAAL,CAAeC,SAAD,KAAgB;AAC5BV,QAAAA,KAAK,EAAEU,SAAS,CAACV,KAAV,CAAgBc,GAAhB,CAAqBT,IAAD,IAAU;AACnC,cAAIA,IAAI,CAACC,EAAL,KAAYO,MAAhB,EAAwB;AACtB,mBAAO,EACL,GAAGR,IADE;AAELG,cAAAA,SAAS,EAAE,CAACH,IAAI,CAACG;AAFZ,aAAP;AAID;;AAED,iBAAOH,IAAP;AACD,SATM;AADqB,OAAhB,CAAd;AAYD,KArCqC;;AAAA,SAuCtCU,YAvCsC,GAuCtBC,KAAD,IAAW;AACxB,WAAKP,QAAL,CAAc;AAAER,QAAAA,MAAM,EAAEe,KAAK,CAACC,aAAN,CAAoBC;AAA9B,OAAd;AACD,KAzCqC;;AAAA,SA2CtCC,eA3CsC,GA2CpB,MAAM;AACtB,YAAMC,gBAAgB,GAAG,KAAKrB,KAAL,CAAWE,MAAX,CAAkBoB,WAAlB,EAAzB;AACA,aAAO,KAAKtB,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAyBI,IAAD,IAAUA,IAAI,CAACD,IAAL,CAAUkB,QAAV,CAAmBF,gBAAnB,CAAlC,CAAP;AACD,KA9CqC;;AAAA,SAmEtCG,WAnEsC,GAmExB,MAAM;AAClB,WAAKd,QAAL,CAAc;AAAEP,QAAAA,SAAS,EAAE,CAAC,KAAKH,KAAL,CAAWG;AAAzB,OAAd;AACD,KArEqC;AAAA;;AAgDtCsB,EAAAA,iBAAiB,GAAG;AAClB,UAAMxB,KAAK,GAAGyB,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AACA,UAAMC,KAAK,GAAGC,IAAI,CAACD,KAAL,CAAW3B,KAAX,CAAd;;AACA,QAAI2B,KAAJ,EAAW;AACT,WAAKlB,QAAL,CAAc;AAAET,QAAAA,KAAK,EAAE2B;AAAT,OAAd;AACD;AACF;;AACDE,EAAAA,kBAAkB,CAACC,CAAD,EAAIpB,SAAJ,EAAe;AAC/B,UAAM;AAAEV,MAAAA;AAAF,QAAY,KAAKD,KAAvB;;AACA,QAAIC,KAAK,KAAKU,SAAS,CAACV,KAAxB,EAA+B;AAC7ByB,MAAAA,YAAY,CAACM,OAAb,CAAqB,OAArB,EAA8BH,IAAI,CAACI,SAAL,CAAe,KAAKjC,KAAL,CAAWC,KAA1B,CAA9B;AACD;AACF,GA5DqC,CA8DtC;AACA;AACA;AACA;;;AAMAiC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEjC,MAAAA,KAAF;AAASE,MAAAA;AAAT,QAAuB,KAAKH,KAAlC;AACA,UAAMS,SAAS,GAAGR,KAAK,CAACC,MAAN,CAAcI,IAAD,IAAUA,IAAI,CAACG,SAA5B,CAAlB;AACA,UAAM0B,WAAW,GAAG,KAAKf,eAAL,EAApB;AACA,wBACE;AAAA,8BACE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,cADF,EAEGjB,SAAS,iBAAI,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,cAFhB;AAAA,oBADF;AAsBD;;AAjGqC","sourcesContent":["import { Component } from \"react\";\nimport shortid from \"shortid\";\nimport { List } from \"../List\";\nimport { TodoEditor } from \"../TodoEditor\";\nimport { Filter } from \"../Filter\";\nimport { MyVerticallyCenteredModal } from \"../MyVerticallyCenteredModal\";\n\nimport { Modal } from \"../Modal/Modal\";\nimport { BtnForModal } from \"../BtnForModal\";\nexport class TodoList extends Component {\n  state = {\n    todos: [],\n    filter: \"\",\n    modalShow: false,\n  };\n\n  addTodo = (text) => {\n    const todo = {\n      id: shortid.generate(),\n      text,\n      completed: false,\n    };\n\n    this.setState((prevState) => ({\n      todos: [todo, ...prevState.todos],\n    }));\n  };\n  deleteTodo = (id) => {\n    this.setState((prevState) => ({\n      todos: prevState.todos.filter((todo) => todo.id !== id),\n    }));\n  };\n\n  toggleCompleted = (todoId) => {\n    this.setState((prevState) => ({\n      todos: prevState.todos.map((todo) => {\n        if (todo.id === todoId) {\n          return {\n            ...todo,\n            completed: !todo.completed,\n          };\n        }\n\n        return todo;\n      }),\n    }));\n  };\n\n  changeFilter = (event) => {\n    this.setState({ filter: event.currentTarget.value });\n  };\n\n  getVisibleTodos = () => {\n    const normalizedFilter = this.state.filter.toLowerCase();\n    return this.state.todos.filter((todo) => todo.text.includes(normalizedFilter));\n  };\n\n  componentDidMount() {\n    const todos = localStorage.getItem(\"todos\");\n    const parse = JSON.parse(todos);\n    if (parse) {\n      this.setState({ todos: parse });\n    }\n  }\n  componentDidUpdate(_, prevState) {\n    const { todos } = this.state;\n    if (todos !== prevState.todos) {\n      localStorage.setItem(\"todos\", JSON.stringify(this.state.todos));\n    }\n  }\n\n  // НЕ ТРОГАТЬ!!!\n  // setModalShow = (value) => {\n  //   this.setState({ modalShow: value });\n  // };\n\n  toggleModal = () => {\n    this.setState({ modalShow: !this.state.modalShow });\n  };\n\n  render() {\n    const { todos, modalShow } = this.state;\n    const completed = todos.filter((todo) => todo.completed);\n    const filterTodos = this.getVisibleTodos();\n    return (\n      <>\n        <BtnForModal />\n        {modalShow && <Modal />}\n        {/* <div>\n          <p>Общее количество Todo: {todos.length}</p>\n          <p>Количество выполненых: {completed.length}</p>\n        </div>\n        <Filter onFilter={this.state.filter} changeFilter={this.changeFilter} />\n\n        <List todos={filterTodos} title=\"Состояние Компонента: \" onDelete={this.deleteTodo} />\n        <TodoEditor onSubmit={this.addTodo} /> */}\n\n        {/* <Button variant=\"primary\" onClick={() => this.setModalShow(true)}>\n          Open Modal\n        </Button>\n        <MyVerticallyCenteredModal\n          show={this.state.modalShow}\n          onHide={() => this.setModalShow(false)}\n        /> */}\n      </>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}