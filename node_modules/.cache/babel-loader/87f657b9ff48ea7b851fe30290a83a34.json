{"ast":null,"code":"import * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport useCallbackRef from '@restart/hooks/useCallbackRef';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport { useState } from 'react';\nimport usePopper from './usePopper';\nimport useRootClose from './useRootClose';\nimport useWaitForDOMRef from './useWaitForDOMRef';\nimport mergeOptionsWithPopperConfig from './mergeOptionsWithPopperConfig';\nimport { renderTransition } from './ImperativeTransition';\n/**\n * Built on top of `Popper.js`, the overlay component is\n * great for custom tooltip overlays.\n */\n\nconst Overlay = /*#__PURE__*/React.forwardRef((props, outerRef) => {\n  const {\n    flip,\n    offset,\n    placement,\n    containerPadding,\n    popperConfig = {},\n    transition: Transition,\n    runTransition\n  } = props;\n  const [rootElement, attachRef] = useCallbackRef();\n  const [arrowElement, attachArrowRef] = useCallbackRef();\n  const mergedRef = useMergedRefs(attachRef, outerRef);\n  const container = useWaitForDOMRef(props.container);\n  const target = useWaitForDOMRef(props.target);\n  const [exited, setExited] = useState(!props.show);\n  const hasTransition = !!(Transition || runTransition);\n  const popper = usePopper(target, rootElement, mergeOptionsWithPopperConfig({\n    placement,\n    enableEvents: !!props.show,\n    containerPadding: containerPadding || 5,\n    flip,\n    offset,\n    arrowElement,\n    popperConfig\n  }));\n\n  if (props.show) {\n    if (exited) setExited(false);\n  } else if (!hasTransition && !exited) {\n    setExited(true);\n  }\n\n  const handleHidden = function () {\n    setExited(true);\n\n    if (props.onExited) {\n      props.onExited(...arguments);\n    }\n  }; // Don't un-render the overlay while it's transitioning out.\n\n\n  const mountOverlay = props.show || hasTransition && !exited;\n  useRootClose(rootElement, props.onHide, {\n    disabled: !props.rootClose || props.rootCloseDisabled,\n    clickTrigger: props.rootCloseEvent\n  });\n\n  if (!mountOverlay) {\n    // Don't bother showing anything if we don't have to.\n    return null;\n  }\n\n  const {\n    onExit,\n    onExiting,\n    onEnter,\n    onEntering,\n    onEntered\n  } = props;\n  let child = props.children(Object.assign({}, popper.attributes.popper, {\n    style: popper.styles.popper,\n    ref: mergedRef\n  }), {\n    popper,\n    placement,\n    show: !!props.show,\n    arrowProps: Object.assign({}, popper.attributes.arrow, {\n      style: popper.styles.arrow,\n      ref: attachArrowRef\n    })\n  });\n  child = renderTransition(Transition, runTransition, {\n    in: !!props.show,\n    children: child,\n    onExit,\n    onExiting,\n    onExited: handleHidden,\n    onEnter,\n    onEntering,\n    onEntered\n  });\n  return container ? /*#__PURE__*/ReactDOM.createPortal(child, container) : null;\n});\nOverlay.displayName = 'Overlay';\nexport default Overlay;","map":{"version":3,"sources":["/Users/privetsvuemlord/Documents/react/trainingTime/node_modules/@restart/ui/esm/Overlay.js"],"names":["React","ReactDOM","useCallbackRef","useMergedRefs","useState","usePopper","useRootClose","useWaitForDOMRef","mergeOptionsWithPopperConfig","renderTransition","Overlay","forwardRef","props","outerRef","flip","offset","placement","containerPadding","popperConfig","transition","Transition","runTransition","rootElement","attachRef","arrowElement","attachArrowRef","mergedRef","container","target","exited","setExited","show","hasTransition","popper","enableEvents","handleHidden","onExited","mountOverlay","onHide","disabled","rootClose","rootCloseDisabled","clickTrigger","rootCloseEvent","onExit","onExiting","onEnter","onEntering","onEntered","child","children","Object","assign","attributes","style","styles","ref","arrowProps","arrow","in","createPortal","displayName"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport useCallbackRef from '@restart/hooks/useCallbackRef';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport { useState } from 'react';\nimport usePopper from './usePopper';\nimport useRootClose from './useRootClose';\nimport useWaitForDOMRef from './useWaitForDOMRef';\nimport mergeOptionsWithPopperConfig from './mergeOptionsWithPopperConfig';\nimport { renderTransition } from './ImperativeTransition';\n/**\n * Built on top of `Popper.js`, the overlay component is\n * great for custom tooltip overlays.\n */\nconst Overlay = /*#__PURE__*/React.forwardRef((props, outerRef) => {\n  const {\n    flip,\n    offset,\n    placement,\n    containerPadding,\n    popperConfig = {},\n    transition: Transition,\n    runTransition\n  } = props;\n  const [rootElement, attachRef] = useCallbackRef();\n  const [arrowElement, attachArrowRef] = useCallbackRef();\n  const mergedRef = useMergedRefs(attachRef, outerRef);\n  const container = useWaitForDOMRef(props.container);\n  const target = useWaitForDOMRef(props.target);\n  const [exited, setExited] = useState(!props.show);\n  const hasTransition = !!(Transition || runTransition);\n  const popper = usePopper(target, rootElement, mergeOptionsWithPopperConfig({\n    placement,\n    enableEvents: !!props.show,\n    containerPadding: containerPadding || 5,\n    flip,\n    offset,\n    arrowElement,\n    popperConfig\n  }));\n  if (props.show) {\n    if (exited) setExited(false);\n  } else if (!hasTransition && !exited) {\n    setExited(true);\n  }\n  const handleHidden = (...args) => {\n    setExited(true);\n    if (props.onExited) {\n      props.onExited(...args);\n    }\n  };\n\n  // Don't un-render the overlay while it's transitioning out.\n  const mountOverlay = props.show || hasTransition && !exited;\n  useRootClose(rootElement, props.onHide, {\n    disabled: !props.rootClose || props.rootCloseDisabled,\n    clickTrigger: props.rootCloseEvent\n  });\n  if (!mountOverlay) {\n    // Don't bother showing anything if we don't have to.\n    return null;\n  }\n  const {\n    onExit,\n    onExiting,\n    onEnter,\n    onEntering,\n    onEntered\n  } = props;\n  let child = props.children(Object.assign({}, popper.attributes.popper, {\n    style: popper.styles.popper,\n    ref: mergedRef\n  }), {\n    popper,\n    placement,\n    show: !!props.show,\n    arrowProps: Object.assign({}, popper.attributes.arrow, {\n      style: popper.styles.arrow,\n      ref: attachArrowRef\n    })\n  });\n  child = renderTransition(Transition, runTransition, {\n    in: !!props.show,\n    children: child,\n    onExit,\n    onExiting,\n    onExited: handleHidden,\n    onEnter,\n    onEntering,\n    onEntered\n  });\n  return container ? /*#__PURE__*/ReactDOM.createPortal(child, container) : null;\n});\nOverlay.displayName = 'Overlay';\nexport default Overlay;"]},"metadata":{},"sourceType":"module"}