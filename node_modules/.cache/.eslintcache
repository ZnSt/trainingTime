[{"/Users/privetsvuemlord/Documents/react/trainingTime/src/index.js":"1","/Users/privetsvuemlord/Documents/react/trainingTime/src/components/App.jsx":"2","/Users/privetsvuemlord/Documents/react/trainingTime/src/components/FormContacts/index.js":"3","/Users/privetsvuemlord/Documents/react/trainingTime/src/components/FormContacts/FormContacts.jsx":"4","/Users/privetsvuemlord/Documents/react/trainingTime/src/components/ContactsList/index.js":"5","/Users/privetsvuemlord/Documents/react/trainingTime/src/components/ContactsList/ContactsList.jsx":"6","/Users/privetsvuemlord/Documents/react/trainingTime/src/components/Filter/index.js":"7","/Users/privetsvuemlord/Documents/react/trainingTime/src/components/Filter/Filter.jsx":"8"},{"size":248,"mtime":1664468707000,"results":"9","hashOfConfig":"10"},{"size":1549,"mtime":1673863493642,"results":"11","hashOfConfig":"10"},{"size":32,"mtime":1673793423238,"results":"12","hashOfConfig":"10"},{"size":1619,"mtime":1673863840381,"results":"13","hashOfConfig":"10"},{"size":32,"mtime":1673853722299,"results":"14","hashOfConfig":"10"},{"size":484,"mtime":1673863863048,"results":"15","hashOfConfig":"10"},{"size":26,"mtime":1673854255805,"results":"16","hashOfConfig":"10"},{"size":204,"mtime":1673856368505,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},"9nslwo",{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"26"},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"/Users/privetsvuemlord/Documents/react/trainingTime/src/index.js",[],[],[],"/Users/privetsvuemlord/Documents/react/trainingTime/src/components/App.jsx",["45"],[],"import { Component } from \"react\";\nimport shortid from \"shortid\";\nimport contacts from \"../json/contacts.json\";\n\nimport { FormContacts } from \"./FormContacts\";\nimport { ContactsList } from \"./ContactsList\";\nimport { Filter } from \"./Filter\";\n\nexport class App extends Component {\n  state = {\n    contacts,\n    filter: \"\",\n  };\n\n  addNewContact = (newName, newNumber) => {\n    const newContact = {\n      id: shortid.generate(),\n      name: newName,\n      number: newNumber,\n    };\n\n    this.setState(({ contacts }) => ({\n      contacts: [newContact, ...contacts],\n    }));\n  };\n\n  deleteContact = (id) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter((contact) => contact.id !== id),\n    }));\n  };\n\n  changeFilter = (event) => {\n    this.setState({ filter: event.currentTarget.value });\n  };\n\n  getVisibleContacts = () => {\n    const { contacts, filter } = this.state;\n    return contacts.filter((contact) => contact.name.toLowerCase().includes(filter));\n  };\n\n  repeatContact = (nameId) => {\n    this.state.contacts.filter((contact) => {\n      if (contact.name.includes(nameId)) {\n        alert(`${nameId} is already been`);\n      }\n    });\n  };\n  render() {\n    const { filter } = this.state;\n    const filteredName = this.getVisibleContacts();\n\n    return (\n      <>\n        <FormContacts onSubmit={this.addNewContact} repeat={this.repeatContact} />\n        <Filter onFilter={this.changeFilter} value={filter} />\n\n        <ContactsList value={filteredName} onDelete={this.deleteContact} />\n      </>\n    );\n  }\n}\n",[],"/Users/privetsvuemlord/Documents/react/trainingTime/src/components/FormContacts/index.js",[],[],"/Users/privetsvuemlord/Documents/react/trainingTime/src/components/FormContacts/FormContacts.jsx",[],[],"/Users/privetsvuemlord/Documents/react/trainingTime/src/components/ContactsList/index.js",[],[],"/Users/privetsvuemlord/Documents/react/trainingTime/src/components/ContactsList/ContactsList.jsx",[],[],"/Users/privetsvuemlord/Documents/react/trainingTime/src/components/Filter/index.js",[],[],"/Users/privetsvuemlord/Documents/react/trainingTime/src/components/Filter/Filter.jsx",[],[],{"ruleId":"46","severity":1,"message":"47","line":43,"column":42,"nodeType":"48","messageId":"49","endLine":43,"endColumn":44},"array-callback-return","Array.prototype.filter() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside"]